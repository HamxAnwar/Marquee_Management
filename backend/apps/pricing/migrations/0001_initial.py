# Generated by Django 5.2.7 on 2025-10-20 22:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0001_initial'),
        ('core', '0001_initial'),
        ('menu', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BudgetSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('guest_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('suggested_per_person_budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_estimated_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('variance_percentage', models.DecimalField(decimal_places=2, help_text='How close to target budget (+ or - %)', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_accepted', models.BooleanField(default=False)),
                ('hall', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.hall')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PriceCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hall_base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('menu_subtotal', models.DecimalField(decimal_places=2, max_digits=12)),
                ('guest_discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('service_charge_rate', models.DecimalField(decimal_places=2, default=0, help_text='Service charge percentage', max_digits=5)),
                ('service_charge_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, help_text='Tax percentage', max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('subtotal_before_discount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('subtotal_after_discount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('price_per_person', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='price_calculation', to='bookings.booking')),
                ('guest_discount_tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.discounttier')),
            ],
            options={
                'ordering': ['-calculated_at'],
            },
        ),
        migrations.CreateModel(
            name='PricingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('percentage_discount', 'Percentage Discount'), ('fixed_discount', 'Fixed Amount Discount'), ('minimum_charge', 'Minimum Charge'), ('service_charge', 'Service Charge')], max_length=20)),
                ('value', models.DecimalField(decimal_places=2, help_text='Percentage (0-100) or fixed amount', max_digits=10)),
                ('min_guests', models.IntegerField(blank=True, null=True)),
                ('max_guests', models.IntegerField(blank=True, null=True)),
                ('applicable_days', models.CharField(blank=True, help_text='Days of week: 1234567 (Mon-Sun), leave blank for all days', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('applicable_halls', models.ManyToManyField(blank=True, to='core.hall')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SuggestedMenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggested_quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('estimated_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menu.menuitem')),
                ('suggestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.budgetsuggestion')),
            ],
            options={
                'unique_together': {('suggestion', 'menu_item')},
            },
        ),
        migrations.AddField(
            model_name='budgetsuggestion',
            name='suggested_menu_items',
            field=models.ManyToManyField(related_name='budget_suggestions', through='pricing.SuggestedMenuItem', to='menu.menuitem'),
        ),
    ]
