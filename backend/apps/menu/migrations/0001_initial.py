# Generated by Django 5.2.7 on 2025-10-31 10:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('display_order', models.IntegerField(default=0, help_text='Order for displaying categories')),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu_categories/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_categories', to='core.organization')),
            ],
            options={
                'verbose_name_plural': 'Menu Categories',
                'ordering': ['organization', 'display_order', 'name'],
                'unique_together': {('organization', 'name')},
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Base price per serving', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('serving_type', models.CharField(choices=[('per_plate', 'Per Plate'), ('per_kg', 'Per KG'), ('per_piece', 'Per Piece'), ('per_portion', 'Per Portion'), ('per_person', 'Per Person')], default='per_plate', max_length=15)),
                ('dietary_type', models.CharField(choices=[('regular', 'Regular'), ('vegetarian', 'Vegetarian'), ('vegan', 'Vegan'), ('halal', 'Halal'), ('kosher', 'Kosher'), ('gluten_free', 'Gluten Free')], default='regular', max_length=20)),
                ('is_available', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu_items/')),
                ('ingredients', models.TextField(blank=True, help_text='List of main ingredients')),
                ('allergens', models.TextField(blank=True, help_text='Common allergens (comma-separated)')),
                ('preparation_time', models.IntegerField(default=30, help_text='Preparation time in minutes', validators=[django.core.validators.MinValueValidator(0)])),
                ('spice_level', models.IntegerField(choices=[(0, 'No Spice'), (1, 'Mild'), (2, 'Medium'), (3, 'Hot'), (4, 'Very Hot')], default=0)),
                ('calories_per_serving', models.IntegerField(blank=True, null=True)),
                ('min_order_quantity', models.IntegerField(default=1)),
                ('max_order_quantity', models.IntegerField(blank=True, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='menu.menucategory')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='core.organization')),
            ],
            options={
                'ordering': ['organization', 'category__display_order', 'display_order', 'name'],
                'unique_together': {('organization', 'category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='MenuItemVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Large, Medium, Extra Spicy', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, help_text='Additional cost (can be negative for discounts)', max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='menu.menuitem')),
            ],
            options={
                'ordering': ['display_order', 'name'],
                'unique_together': {('menu_item', 'name')},
            },
        ),
        migrations.CreateModel(
            name='MenuPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('package_type', models.CharField(choices=[('wedding', 'Wedding Package'), ('corporate', 'Corporate Package'), ('birthday', 'Birthday Package'), ('custom', 'Custom Package')], default='custom', max_length=20)),
                ('base_price_per_person', models.DecimalField(decimal_places=2, help_text='Base price per person for this package', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('min_guests', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('max_guests', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu_packages/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_packages', to='core.organization')),
            ],
            options={
                'ordering': ['organization', 'package_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PackageMenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_per_person', models.DecimalField(decimal_places=3, help_text='Quantity per person (e.g., 0.5 for half plate per person)', max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_optional', models.BooleanField(default=False)),
                ('additional_cost', models.DecimalField(decimal_places=2, default=0, help_text='Additional cost per person if item is optional', max_digits=10)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menu.menuitem')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_items', to='menu.menupackage')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='menu.menuitemvariant')),
            ],
            options={
                'unique_together': {('package', 'menu_item', 'variant')},
            },
        ),
        migrations.AddField(
            model_name='menupackage',
            name='menu_items',
            field=models.ManyToManyField(related_name='packages', through='menu.PackageMenuItem', to='menu.menuitem'),
        ),
        migrations.CreateModel(
            name='MenuCustomization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('customization_type', models.CharField(choices=[('spice_level', 'Spice Level'), ('cooking_style', 'Cooking Style'), ('portion_size', 'Portion Size'), ('ingredient_add', 'Add Ingredient'), ('ingredient_remove', 'Remove Ingredient'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, help_text='Additional cost for this customization', max_digits=8)),
                ('available_options', models.TextField(blank=True, help_text='Comma-separated options for this customization')),
                ('is_required', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customizations', to='menu.menuitem')),
            ],
            options={
                'ordering': ['menu_item', 'display_order', 'name'],
                'unique_together': {('menu_item', 'name')},
            },
        ),
        migrations.CreateModel(
            name='MenuReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('review', models.TextField()),
                ('is_approved', models.BooleanField(default=False)),
                ('is_verified_order', models.BooleanField(default=False)),
                ('taste_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('presentation_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('value_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_reviews', to=settings.AUTH_USER_MODEL)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='menu.menuitem')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('menu_item', 'customer')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='menupackage',
            unique_together={('organization', 'name')},
        ),
    ]
