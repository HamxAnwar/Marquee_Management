# Generated by Django 5.2.7 on 2025-10-31 10:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=150)),
                ('description', models.TextField(blank=True)),
                ('hall_type', models.CharField(choices=[('indoor', 'Indoor Hall'), ('outdoor', 'Outdoor Hall'), ('garden', 'Garden'), ('rooftop', 'Rooftop'), ('banquet', 'Banquet Hall'), ('conference', 'Conference Room')], default='indoor', max_length=20)),
                ('capacity', models.IntegerField(help_text='Maximum number of guests', validators=[django.core.validators.MinValueValidator(1)])),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Base price for hall rental', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('amenities', models.TextField(blank=True, help_text='Comma-separated list of amenities')),
                ('has_parking', models.BooleanField(default=False)),
                ('has_ac', models.BooleanField(default=False)),
                ('has_kitchen', models.BooleanField(default=False)),
                ('has_sound_system', models.BooleanField(default=False)),
                ('has_stage', models.BooleanField(default=False)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='halls/featured/')),
                ('is_active', models.BooleanField(default=True)),
                ('allow_external_catering', models.BooleanField(default=False)),
                ('advance_booking_days', models.IntegerField(default=30, help_text='Minimum days before event for booking')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['organization', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PlatformSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_commission_rate', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('auto_approve_organizations', models.BooleanField(default=False)),
                ('platform_fee_percentage', models.DecimalField(decimal_places=2, default=2.5, max_digits=5)),
                ('support_email', models.EmailField(default='support@marqueebooking.com', max_length=254)),
                ('no_reply_email', models.EmailField(default='noreply@marqueebooking.com', max_length=254)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField(blank=True)),
                ('site_title', models.CharField(default='MarqueeBooking - Event Venue Platform', max_length=200)),
                ('site_description', models.TextField(default='Find and book the perfect venue for your events')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Platform Settings',
                'verbose_name_plural': 'Platform Settings',
            },
        ),
        migrations.CreateModel(
            name='HallImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='halls/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_featured', models.BooleanField(default=False)),
                ('display_order', models.IntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('hall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.hall')),
            ],
            options={
                'ordering': ['display_order', '-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('description', models.TextField(blank=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='Pakistan', max_length=100)),
                ('business_license', models.CharField(blank=True, max_length=100)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('website', models.URLField(blank=True)),
                ('subscription_plan', models.CharField(choices=[('basic', 'Basic'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], default='basic', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('suspended', 'Suspended'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=5.0, help_text='Platform commission percentage', max_digits=5)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='organizations/logos/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='organizations/covers/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_organizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='hall',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='halls', to='core.organization'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('customer', 'Customer'), ('venue_owner', 'Venue Owner'), ('platform_admin', 'Platform Admin')], default='customer', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('preferred_contact', models.CharField(choices=[('phone', 'Phone'), ('email', 'Email'), ('both', 'Both')], default='phone', max_length=10)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('preferred_event_types', models.TextField(blank=True, help_text='Comma-separated event types')),
                ('budget_range_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('budget_range_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('marketing_emails', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HallReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(max_length=200)),
                ('review', models.TextField()),
                ('is_approved', models.BooleanField(default=False)),
                ('is_verified_booking', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hall_reviews', to=settings.AUTH_USER_MODEL)),
                ('hall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='core.hall')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('hall', 'customer')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='hall',
            unique_together={('organization', 'slug')},
        ),
        migrations.CreateModel(
            name='DiscountTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('min_guests', models.IntegerField(help_text='Minimum number of guests for this tier', validators=[django.core.validators.MinValueValidator(1)])),
                ('max_guests', models.IntegerField(help_text='Maximum number of guests for this tier (inclusive)', validators=[django.core.validators.MinValueValidator(1)])),
                ('discount_percentage', models.DecimalField(decimal_places=2, help_text='Discount percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discount_tiers', to='core.organization')),
            ],
            options={
                'ordering': ['organization', 'min_guests'],
                'unique_together': {('organization', 'name')},
            },
        ),
        migrations.CreateModel(
            name='OrganizationMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('staff', 'Staff'), ('viewer', 'Viewer')], default='staff', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_members', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='core.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-joined_at'],
                'unique_together': {('organization', 'user')},
            },
        ),
    ]
