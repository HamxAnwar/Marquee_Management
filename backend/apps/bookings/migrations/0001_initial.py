# Generated by Django 5.2.7 on 2025-10-31 10:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('menu', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('event_date', models.DateField()),
                ('event_time', models.TimeField()),
                ('event_end_time', models.TimeField(blank=True, null=True)),
                ('event_type', models.CharField(choices=[('wedding', 'Wedding'), ('birthday', 'Birthday Party'), ('corporate', 'Corporate Event'), ('anniversary', 'Anniversary'), ('graduation', 'Graduation Party'), ('religious', 'Religious Event'), ('conference', 'Conference'), ('workshop', 'Workshop'), ('exhibition', 'Exhibition'), ('other', 'Other')], default='wedding', max_length=50)),
                ('event_title', models.CharField(blank=True, help_text='Optional event title', max_length=200)),
                ('guest_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('estimated_guest_count', models.IntegerField(blank=True, help_text='If different from confirmed guest count', null=True)),
                ('contact_phone', models.CharField(max_length=20)),
                ('contact_email', models.EmailField(max_length=254)),
                ('secondary_contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_person_name', models.CharField(blank=True, help_text='If different from customer', max_length=100)),
                ('special_requirements', models.TextField(blank=True)),
                ('dietary_requirements', models.TextField(blank=True)),
                ('decoration_requirements', models.TextField(blank=True)),
                ('external_vendors', models.TextField(blank=True, help_text='List of external vendors (catering, decoration, etc.)')),
                ('has_custom_menu', models.BooleanField(default=False)),
                ('hall_base_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('menu_subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('package_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('service_charge', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('platform_fee', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_status', models.CharField(choices=[('pending', 'Payment Pending'), ('partial', 'Partially Paid'), ('paid', 'Fully Paid'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('advance_amount', models.DecimalField(decimal_places=2, default=0, help_text='Advance payment required', max_digits=12)),
                ('advance_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('balance_due', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes for venue staff')),
                ('customer_notes', models.TextField(blank=True, help_text='Notes visible to customer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('booking_source', models.CharField(choices=[('website', 'Website'), ('phone', 'Phone'), ('email', 'Email'), ('walk_in', 'Walk-in'), ('referral', 'Referral')], default='website', max_length=20)),
                ('assigned_staff', models.ForeignKey(blank=True, help_text='Staff member responsible for this booking', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_bookings', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('hall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.hall')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.organization')),
                ('selected_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='menu.menupackage')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('phone', 'Phone Call'), ('whatsapp', 'WhatsApp'), ('in_person', 'In Person'), ('system', 'System Generated')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('is_internal', models.BooleanField(default=False, help_text='Internal communication between staff')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='bookings.booking')),
                ('sent_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_communications', to=settings.AUTH_USER_MODEL)),
                ('sent_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_communications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('contract', 'Contract'), ('receipt', 'Receipt'), ('invoice', 'Invoice'), ('agreement', 'Agreement'), ('permit', 'Permit'), ('insurance', 'Insurance'), ('layout', 'Layout Plan'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='booking_documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_signed', models.BooleanField(default=False)),
                ('signed_at', models.DateTimeField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='bookings.booking')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingMenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Quantity ordered', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price at the time of booking', max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='quantity * unit_price', max_digits=12)),
                ('notes', models.TextField(blank=True, help_text='Special instructions for this item')),
                ('customizations', models.TextField(blank=True, help_text='JSON field for customization options')),
                ('is_confirmed', models.BooleanField(default=True)),
                ('is_optional', models.BooleanField(default=False)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='bookings.booking')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menu.menuitem')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='menu.menuitemvariant')),
            ],
            options={
                'ordering': ['menu_item__category__display_order', 'menu_item__display_order'],
            },
        ),
        migrations.CreateModel(
            name='BookingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('advance', 'Advance Payment'), ('partial', 'Partial Payment'), ('final', 'Final Payment'), ('refund', 'Refund'), ('penalty', 'Penalty')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('bank_transfer', 'Bank Transfer'), ('online', 'Online Payment'), ('cheque', 'Cheque'), ('other', 'Other')], max_length=20)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('is_verified', models.BooleanField(default=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bookings.booking')),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_payments', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='BookingReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(help_text='Overall rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('venue_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('service_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('food_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('value_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('review', models.TextField()),
                ('images', models.TextField(blank=True, help_text='JSON array of image URLs')),
                ('is_approved', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('venue_response', models.TextField(blank=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='bookings.booking')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_reviews', to=settings.AUTH_USER_MODEL)),
                ('responded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(max_length=20)),
                ('new_status', models.CharField(max_length=20)),
                ('reason', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='bookings.booking')),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Booking Status Histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['organization', 'status'], name='bookings_bo_organiz_05a90d_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['organization', 'event_date'], name='bookings_bo_organiz_e25086_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['customer', 'status'], name='bookings_bo_custome_0cbf77_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['hall', 'event_date'], name='bookings_bo_hall_id_3fc0bf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bookingmenuitem',
            unique_together={('booking', 'menu_item', 'variant')},
        ),
    ]
